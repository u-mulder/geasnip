# Geany's snippets configuration file
#
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
# use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
# use %key% for all keys defined in the [Special] section.
# use %cursor% to define where the cursor should be placed after completion. You can define multiple
#     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#     position in the completed snippet.
# You can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#
# Additionally, you can use most of the template wildcards like {developer}, {command:...},
# or {date} in the snippets.
# See the documentation for details.

# For a list of available filetype names, execute:
# geany --ft-names

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%
td=// TODO
tdrm=// TODO: remove
tdr=// TODO: remove
tds=// TODO: set
auth=@author u_mulder <m264695502@gmail.com>
author=@author u_mulder <m264695502@gmail.com>
doccom=/**\n *\n * @author u_mulder <m264695502@gmail.com>\n */
phpdoc=/**\n *\n * @author u_mulder <m264695502@gmail.com>\n */
script=<script type="text/javascript">%cursor%</script>
scriptsrc=<script type="text/javascript" src="%cursor%"></script>
fa=false
tu=true
tr=true

# JS
jsclick = $( "%cursor%" ).click( function() {} );
onclick = $( "%cursor%" ).click( function() {} );
jsidclick = $( "#%cursor%" ).click( function() {} );
onidclick = $( "#%cursor%" ).click( function() {} );
idclick = $( "#%cursor%" ).click( function() {} );
jsonclick = $( "%cursor%" ).on( "click", function() {} );
jsonidclick = $( "#%cursor%" ).on( "click", function() {} );
docready = $( document ).ready( function() {\n\t%cursor%\n} );
ajax = $.ajax( {} );

#html
submit = <input type="submit" name="%cursor%" value="" />
text = <input type="text" name="%cursor%" value="" />
textarea = <textarea name=""></textarea>
select = <select name=""></select>
multiple=<select name="%cursor%" multiple></select>
option=<option value="%cursor%">%cursor%</option>
enctype=enctype="multipart/form-data"
encoding=<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
form=<form method="POST" action="%cursor%"></form>
formget=<form method="GET" action="%cursor%"></form>
file=<input type="file" name="%cursor%" value="" />

# special keys to be used in other snippets, cannot be used "standalone"
# can be used by %key%, e.g. %brace_open%
# nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
# key "wordchars" is very special, it defines the word delimiting characters when looking for
# a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open={\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor= {\n\t%cursor%\n}\n%cursor%
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# Optional keybindings to insert snippets
# Note: these can be overridden by Geany's configurable keybindings
[Keybindings]
for=<Ctrl>1
while=<Ctrl>2
whilefetch=<Ctrl>3
whilegetnext=<Ctrl>4
whilegetnextel=<Ctrl>5
cibgl=<Ctrl>6
cisgl=<Ctrl>7
incmod=<Ctrl>8
feach=<Ctrl>9

[C++]
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%

[Java]
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%


[PHP]
#Cool snippets for php!
tag=<?php
php=<?php
ar=array()
for=$i = 0;\n$t = sizeof();\nfor (; $i < %cursor%; $i++) %brace_open%\n%brace_close%
fort=$i = 0;\n$t = sizeof(%cursor%);\nfor (; $i < $t; $i++) %brace_open%\n%brace_close%
feach=foreach (%cursor% as $ => $) %brace_open%\n%brace_close%
wf=while ($row = $db_items->Fetch()) %brace_open%\n%cursor%%brace_close%
while=while (%cursor% = ) %brace_open%\n%brace_close%
whilefetch=while ($row = $db_items->Fetch()) %brace_open%\n%cursor%%brace_close%
whilef=while ($row = $db_items->Fetch()) %brace_open%\n%cursor%%brace_close%
whilefetchibe=while ($row = $db_items->Fetch()) %brace_open%\n%cursor%%brace_close%
whilefetchibs=while ($row = $db_sections->Fetch()) %brace_open%\n%cursor%%brace_close%
whilegetnext=while ($el = %cursor%->GetNext()) %brace_open%\n%brace_close%
whilegetnextel=while ($el = %cursor%->GetNextElement()) %brace_open%\n%brace_close%
cibegl=$db_items = CIBlockElement::GetList(\n\tarray(),\n\tarray(),\n\tfalse,\n\tfalse,\n\tarray()\n);\nwhilefetch
cibsgl=$db_sections = CIBlockSection::GetList(\n\tarray(),\n\tarray(),\n\tfalse,\n\tarray()\n);\nwhilefetch
glwf=$db_items = CIBlockElement::GetList(\n\tarray(),\n\tarray(),\n    false,\n    false,\n    array()\n);\nwhile ($row = $db_items->Fetch()) %brace_open%\n%cursor%%brace_close%
incmod=CModule::IncludeModule('%cursor%');
inciblock=CModule::IncludeModule('iblock');
incsale=CModule::IncludeModule('sale');
inccatalog=CModule::IncludeModule('catalog');
if=if (%cursor%) %brace_open%\n%brace_close%
ifelse=if (%cursor%) {\n\n} else {\n\n}
bxcheck=if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true) die();
intcheck= = intval();\nif( < )\n\t = ;
aintcheck=$arParams[''] = intval($arParams['']);\nif($arParams[''] < )\n\t $arParams[''] = ;
aibintcheck=$arParams['IBLOCK_ID'] = intval($arParams['IBLOCK_ID']);\nif($arParams['IBLOCK_ID'] < 1)\n\t $arParams['IBLOCK_ID'] = %cursor%;
astrcheck=$arParams[''] = trim($arParams['']);\nif('' == $arParams[''])\n\t $arParams[''] = ;
aeqy=$arParams['%cursor%'] = $arParams[''] == 'Y';
aeqn=$arParams['%cursor%'] = $arParams[''] == 'N';
arp=$arParams['%cursor%']
arpe=$arParams
arr=$arResult['%cursor%']
arre=$arResult
eprep=echo'<pre>$arParams ',print_r($arParams),'</pre>';\s\s\s\s//\sTODO
eprer=echo'<pre>$arResult ',print_r($arResult),'</pre>';\s\s\s\s//\sTODO
epreres=echo'<pre>$result ',print_r($result),'</pre>';\s\s\s\s//\sTODO
dfn=define('', );
acty='ACTIVE' => 'Y',
actn='ACTIVE' => 'N',
ibid='IBLOCK_ID' => %cursor%,
bxh=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/header.php');
bxha=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_before.php');
inch=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/header.php');
incp=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_before.php');
bxf=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/footer.php');
bxfa=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/epilog_after.php');
incf=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/footer.php');
incfp=require_once($_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/epilog_after.php');
fpath=$file_path = $_SERVER['DOCUMENT_ROOT'] . '/%cursor%';
incfile=if (file_exists(%cursor%))\n\trequire_once();
selrow=selectedRowsCount();
ro=require_once
reqo=require_once
le=%cursor%->LAST_ERROR
LE=%cursor%->LAST_ERROR
fgc=$file_contents = file_get_contents(%cursor%);
fpc=$write_res = file_put_contents(%cursor%, );
vd=var_dump(%cursor%);
adm=AddMessage2Log(%cursor%, false, false);
admp=AddMessage2Log(print_r(%cursor%, true), false, false);
npdo=$dbh = new PDO('mysql:dbname=' . $db_name . ';host=' . $db_host, $db_user, $db_pass);
newpdo=$dbh = new PDO('mysql:dbname=' . $db_name . ';host=' . $db_host, $db_user, $db_pass);
hsp=htmlspecialchars(%cursor%);
docroot=$_SERVER['DOCUMENT_ROOT'];
inccomp=$APPLICATION->IncludeComponent('%cursor%', '%cursor%', array());
inccomponent=$APPLICATION->IncludeComponent('%cursor%', '%cursor%', array());
inccmp=$APPLICATION->IncludeComponent('%cursor%', '%cursor%', array());
inctpl=$this->IncludeComponentTemplate();
ict=$this->IncludeComponentTemplate();
th=$this->
ra=$result = array();
rr=return $result;
epre=echo'<pre>',print_r(%cursor%),'</pre>';\s\s\s\s//\sTODO
eprerow=echo'<pre>$row ',print_r($row),'</pre>';\s\s\s\s//\sTODO
epreadmin=global $USER; if ($USER->IsAdmin()) { echo'<pre style="display:none">',print_r(%cursor%),'</pre>'; }
epreadm=global $USER; if ($USER->IsAdmin()) { echo'<pre style="display:none">',print_r(%cursor%),'</pre>'; }
eprenone=echo'<pre style="display:none">',print_r(%cursor%),'</pre>';\s\s\s\s//\sTODO
eprehid=echo'<pre style="display:none">',print_r(%cursor%),'</pre>';\s\s\s\s//\sTODO
prr=print_r(%cursor%, true)
sof=sizeof(%cursor%)
tsof=$t = sizeof(%cursor%);
prop='PROPERTY_%cursor%'
propval='PROPERTY_%cursor%_VALUE'
newe=$obj_ib_element = new CIBlockElement;
newibe=$obj_ib_element = new CIBlockElement;
nibe=$obj_ib_element = new CIBlockElement;
news=$obj_ib_section = new CIBlockSection;
newibs=$obj_ib_section = new CIBlockSection;
ibea=$add_res = $obj_ib_element->Add(%cursor%);
ibeu=$upd_res = $obj_ib_element->Update(%cursor%);
ibsa=$add_res = $obj_ib_section->Add(%cursor%);
ibsu=$upd_res = $obj_ib_section->Update(%cursor%);
ibid='IBLOCK_ID' => %cursor%,
qe=<?=%cursor%?>
ifemp=if (empty(%cursor%))
ifnotemp=if (!empty(%cursor%))
class=class %cursor% {\n\tfunction %cursor%() {} \n}
aclass=abstract class %cursor% {}
pf=private function %cursor% () \n{\n\t\n}
prisf=private static function %cursor% () \n{\n\t\n}
prsf=protected static function %cursor% () \n{\n\t\n}
psf=public static function %cursor% () \n{\n\t\n}
ptsf=protected static function _%cursor% () \n{\n\t\n}
puf=public function %cursor% () \n{\n\t\n}
prf=protected function _%cursor% () \n{\n\t\n}
bxsespost=bitrix_sessid_post()
bxsesspost=bitrix_sessid_post()
bxsesget=bitrix_sessid_get()
bxsessget=bitrix_sessid_get()
bxsesid=check_bitrix_sessid()
bxsessid=check_bitrix_sessid()
checksessid=check_bitrix_sessid()
checksesid=check_bitrix_sessid()
qe=<?=%cursor%?>
gm=GetMessage('%cursor%')
isauth=$USER->IsAuthorized()
isadmin=$USER->IsAdmin()
strc=$this->StartResultCache()
ifstrc=if ($this->StartResultCache()) {\n\t\n}
startcache=if ($this->StartResultCache()) {\n\t\n}
topcount=array('nTopCount' => %cursor%)
foreachitem=foreach ($arResult['ITEMS'] as $item) {\n\t%cursor%\n}
iv=(int)%cursor%;
вшу=die();
вшу()ж=die();
diefl=die('Dead in ' . __FILE__ . ' on line '. __LINE__ . PHP_EOL);\s\s\s\s//\sTODO
row=$row['%cursor%']
rowid=$row['ID']%cursor%
res=$result[] = %cursor%
diedebug=die(__METHOD__);
debugdie=die(__METHOD__);
selected=<?= == %cursor%? ' selected' : ''?>
checked=<?= == %cursor%? ' checked' : ''?>
headerutf=header('Content-type: text/html; charset=utf-8');
hdrutf=header('Content-type: text/html; charset=utf-8');
ld=LocalRedirect(%cursor%);
lr=LocalRedirect(%cursor%);
locred=LocalRedirect(%cursor%);
METH=__METHOD__
spv=\CIBlockElement::SetPropertyValuesEx(%cursor%,%cursor%,%cursor%,%cursor%);
spvex=\CIBlockElement::SetPropertyValuesEx(%cursor%,%cursor%,%cursor%,%cursor%);
spve=\CIBlockElement::SetPropertyValuesEx(%cursor%,%cursor%,%cursor%,%cursor%);
lf=define('LOG_FILENAME', $_SERVER['DOCUMENT_ROOT'] . '/%cursor%log.txt');
deflog=define('LOG_FILENAME', $_SERVER['DOCUMENT_ROOT'] . '/%cursor%log.txt');
prr=print_r(%cursor%, 1)
getorderprops=TODO
getorderpropslist=TODO
getorderslist=TODO
getorderlist=TODO
getibpropertylist=TODO
getiblockpropertylist=TODO
__c=public function __construct()\n{\n\n}
__const=public function __construct()\n{\n\n}
cons=public function __construct()\n{\n\n}
constr=public function __construct()\n{\n\n}
_c=public function __construct()\n{\n\n}
c=public function __construct()\n{\n\n}
this=$this->
am=array_merge(%cursor%);
amerge=array_merge(%cursor%);
ake=array_key_exists(%cursor%, %cursor%)
ak=array_keys(%cursor%)
aks=array_keys(%cursor%)
av=array_values(%cursor%)
fch=->Fetch()
ebr=echo '<br />';
ifpost = if (isset($_POST[%cursor%]))
ifget = if (isset($_GET[%cursor%]))
r=$row['%cursor%']
re=$row
is=isset(%cursor%)
_P=$_POST['%cursor%']
_p=$_POST['%cursor%']
_G=$_GET['%cursor%']
_g=$_GET['%cursor%']
_S=$_SESSION['%cursor%']
_s=$_SESSION['%cursor%']
_R=$_REQUEST['%cursor%']
_r=$_REQUEST['%cursor%']
GL=$GLOBALS['%cursor%']
gl=$GLOBALS['%cursor%']
obj_cache=$obj_cache = new CPHPCache;\nif ($obj_cache->InitCache($cache_time, $cache_id)) {\n\t$vars = $obj_cache->GetVars();\n} else {\n\t// TODO\n\tif ($obj_cache->StartDataCache())\n\t\t$obj_cache->EndDataCache(array());\n}
objcache=$obj_cache = new CPHPCache;\nif ($obj_cache->InitCache($cache_time, $cache_id)) {\n\t$vars = $obj_cache->GetVars();\n} else {\n\t// TODO\n\tif ($obj_cache->StartDataCache())\n\t\t$obj_cache->EndDataCache(array());\n}
cache=$obj_cache = new CPHPCache;\nif ($obj_cache->InitCache($cache_time, $cache_id)) {\n\t$vars = $obj_cache->GetVars();\n} else {\n\t// TODO\n\tif ($obj_cache->StartDataCache())\n\t\t$obj_cache->EndDataCache(array());\n}
ns=namespace
ext=extends
imp=implements
impl=implements
getcsv=#TODO
fh=$fj = fopen(%cursor%, '%cursor%, ');
whilecsv=while(false !== (data = fgetcsv($fh))) {\n\t\n}
ts=$ts = microtime(true);
te=$te = microtime(true);\necho 'Time elapsed: ' . ($te - $ts);
curl=$ch = curl_init(%cursor%$url);\ncurl_setopt($ch, , );\ncurl_setopt($ch, , );\ncurl_exec($ch);\ncurl_close($ch);
gem=->getErrorMessages()
issucc=->isSuccess()
issuc=->isSuccess()
iss=->isSuccess()
get=public function get%cursor%()\n{\n\t\n}
getter=public function get%cursor%()\n{\n\t\n}
set=public function set%cursor%()\n{\n\t\n}
setter=public function set%cursor%()\n{\n\t\n}
app=$APPLICATION->
APP=$APPLICATION->

[Python]
for=for i in xrange(%cursor%):\n\t
if=if %cursor%:\n\t
elif=elif %cursor%:\n\t
else=else:\n\t
while=while %cursor%:\n\t
try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
with=with %cursor%:\n\t
def=def %cursor% (%cursor%):\n\t""" Function doc """\n\t
class=class %cursor%:\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Haskell]
# prevent completion of "do"-while-loops in Haskell
do=

[HTML]
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
div=<div class=""></div>

[Javascript]
dr=$( document ).ready( function() {\n\t%cursor%\n} );
docready=$( document ).ready( function() {\n\t%cursor%\n} );
fsubmit=$( '%cursor%' ).on( 'submit', function() {\n\t\n} );
fsubmitold=$( '%cursor%' ).submit( function() {\n\t\n} );
ajax=$.ajax( {\n\t\n} );
succf=success: function( data ) {\n\t\n},
succ=success: function( data ) {\n\t\n},
success=success: function( data ) {\n\t\n},
errf=error: function() {\n\t\n},
err=error: function() {\n\t\n},
error=error: function() {\n\t\n},
thisthis=this$ = $ ( this );
srlz=this$.serialize(),\n
alert=alert( %cursor% );
func=function () {\n\t\n}
clog=console.log( %cursor% );
rf=return false;
r0=return false;
